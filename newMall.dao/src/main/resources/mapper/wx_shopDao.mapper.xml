<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.br.newMall.dao.WX_ShopDao">

    <sql id="columnList">    <!-- 字段 -->
        id,
        shop_discount_id,
        shop_title,
        shop_degist,
        shop_phone,
        shop_address,
        shop_lon,
        shop_lat,
        shop_head_img_url,
        shop_describe_img_url,
        shop_minimum,
        shop_business_hours_start_time,
        shop_business_hours_end_time,
        shop_remark,
        shop_status,
        create_time,
        update_time
    </sql>

    <sql id="TColumnList">    <!-- 带表别名的字段 -->
        ns.id as "id",
        ns.shop_discount_id as "shopDiscountId",
        ns.shop_title as "shopTitle",
        ns.shop_degist as "shopDegist",
        ns.shop_phone as "shopPhone",
        ns.shop_address as "shopAddress",
        ns.shop_lon as "shopLon",
        ns.shop_lat as "shopLat",
        ns.shop_head_img_url as "shopHeadImgUrl",
        ns.shop_describe_img_url as "shopDescribeImgUrl",
        ns.shop_minimum as "shopMinimum",
        date_format(ns.shop_business_hours_start_time, '%H:%i:%s') as "shopBusinessHoursStartTime",
        date_format(ns.shop_business_hours_end_time, '%H:%i:%s') as "shopBusinessHoursEndTime",
        ns.shop_remark as "shopRemark",
        ns.shop_status as "shopStatus",
        date_format(ns.create_time, '%Y-%c-%d %H:%i:%s') as "createTime",
        date_format(ns.update_time, '%Y-%c-%d %H:%i:%s') as "updateTime"
    </sql>

    <sql id="queryConditions"><!-- 查询条件 -->
        <where>
            <if test="id != null and id != ''">
                AND ns.id = #{id}
            </if>
            <if test="shopId != null and shopId != ''">
                AND ns.id = #{shopId}
            </if>
            <if test="shopDiscountId != null and shopDiscountId != ''">
                AND ns.shop_discount_id like concat('%',#{shopDiscountId},'%')
            </if>
            <if test="shopTitle != null and shopTitle != ''">
                AND ns.shop_title like concat('%',#{shopTitle},'%')
            </if>
            <if test="shopDegist != null and shopDegist != ''">
                AND ns.shop_degist like concat('%',#{shopDegist},'%')
            </if>
            <if test="shopPhone != null and shopPhone != ''">
                AND ns.shop_phone = #{shopPhone}
            </if>
            <if test="shopAddress != null and shopAddress != ''">
                AND ns.shop_address like concat('%',#{shopAddress},'%')
            </if>
            <if test="shopLon != null and shopLon != ''">
                AND ns.shop_lon = #{shopLon}
            </if>
            <if test="shopLat != null and shopLat != ''">
                AND ns.shop_lat = #{shopLat}
            </if>
            <if test="shopHeadImgUrl != null and shopHeadImgUrl != ''">
                AND ns.shop_head_img_url = #{shopHeadImgUrl}
            </if>
            <if test="shopDescribeImgUrl != null and shopDescribeImgUrl != ''">
                AND ns.shop_describe_img_url = #{shopDescribeImgUrl}
            </if>
            <if test="shopMinimum != null and shopMinimum != ''">
                AND ns.shop_minimum = #{shopMinimum}
            </if>
            <if test="shopBusinessHoursStartTime != null and shopBusinessHoursStartTime != ''">
                AND ns.shop_business_hours_start_time = #{shopBusinessHoursStartTime}
            </if>
            <if test="shopBusinessHoursEndTime != null and shopBusinessHoursEndTime != ''">
                AND ns.shop_business_hours_end_time = #{shopBusinessHoursEndTime}
            </if>
            <if test="shopRemark != null and shopRemark != ''">
                AND ns.shop_remark like concat('%',#{shopRemark},'%')
            </if>
            <if test="shopStatus != null and shopStatus != ''">
                AND ns.shop_status = #{shopStatus}
            </if>
            <if test="minLat != null and maxLat != null and minLon != null and maxLon != null">
                AND ns.shop_lat &gt;= #{minLat} AND ns.shop_lat &lt;= #{maxLat}
                AND ns.shop_lon &gt;= #{minLon} AND ns.shop_lon &lt;= #{maxLon}
            </if>
        </where>
        ORDER BY ns.create_time desc
    </sql>

    <insert id="addShop" parameterType="java.util.Map" useGeneratedKeys="true"
            keyProperty="id">
        insert into n_shop (
            <include refid="columnList"/>
        ) values (
            #{id},
            #{shopDiscountId},
            #{shopTitle},
            #{shopDegist},
            #{shopPhone},
            #{shopAddress},
            #{shopLon},
            #{shopLat},
            #{shopHeadImgUrl},
            #{shopDescribeImgUrl},
            #{shopMinimum},
            #{shopBusinessHoursStartTime},
            #{shopBusinessHoursEndTime},
            #{shopRemark},
            #{shopStatus},
            #{createTime},
            #{updateTime}
        )
    </insert>

    <delete id="deleteShop">
        update n_shop ns set ns.shop_status = 2
        <if test="id != null and id != ''">
            AND id = #{id}
        </if>
    </delete>

    <update id="updateShop">
        update n_shop ns
        <set>
            <if test="nickName != null and nickName != ''">
                and nu.nick_name = #{nickName}
            </if>
            <if test="shopDiscountId != null and shopDiscountId != ''">
               ns.shop_discount_id = #{shopDiscountId},
            </if>
            <if test="shopTitle != null and shopTitle != ''">
               ns.shop_title = #{shopTitle},
            </if>
            <if test="shopDegist != null and shopDegist != ''">
               ns.shop_degist = #{shopDegist},
            </if>
            <if test="shopPhone != null and shopPhone != ''">
               ns.shop_phone = #{shopPhone},
            </if>
            <if test="shopAddress != null and shopAddress != ''">
                AND ns.shop_address = #{shopAddress},
            </if>
            <if test="shopLon != null and shopLon != ''">
               ns.shop_lon = #{shopLon},
            </if>
            <if test="shopLat != null and shopLat != ''">
               ns.shop_lat = #{shopLat},
            </if>
            <if test="shopHeadImgUrl != null and shopHeadImgUrl != ''">
               ns.shop_head_img_url = #{shopHeadImgUrl},
            </if>
            <if test="shopDescribeImgUrl != null and shopDescribeImgUrl != ''">
               ns.shop_describe_img_url = #{shopDescribeImgUrl},
            </if>
            <if test="shopMinimum != null and shopMinimum != ''">
               ns.shop_minimum = #{shopMinimum},
            </if>
            <if test="shopBusinessHoursStartTime != null and shopBusinessHoursStartTime != ''">
               ns.shop_business_hours_start_time = #{shopBusinessHoursStartTime},
            </if>
            <if test="shopBusinessHoursEndTime != null and shopBusinessHoursEndTime != ''">
               ns.shop_business_hours_end_time = #{shopBusinessHoursEndTime},
            </if>
            <if test="shopRemark != null and shopRemark != ''">
               ns.shop_remark = #{shopRemark},
            </if>
            <if test="shopStatus != null and shopStatus != ''">
               ns.shop_status = #{shopStatus},
            </if>
            ns.update_time = CURRENT_TIMESTAMP
        </set>
        where 1=1
        <if test="id != null and id != ''">
            and ns.id = #{id}
        </if>
    </update>

    <select id="getSimpleShopByCondition" resultType="java.util.Map">
        SELECT
            <include refid="TColumnList"/>
        FROM n_shop ns
            <include refid="queryConditions"/>
        <if test="start != null and size != null">
            LIMIT ${start},${size}
        </if>
    </select>

    <select id="getSimpleShopTotalByCondition" resultType="java.lang.Integer">
        SELECT
            COUNT(*) total
        from n_shop ns
            <include refid="queryConditions"/>
    </select>

    <select id="getShopByCondition" resultType="java.util.Map">
        SELECT
            nu.id as "shopUid",
            nu.open_id as "shopOpenId",
            nu.shop_id as "shopId",
            ifnull(non.shopOrderAmount, 0) as "shopOrderAmount",
            ifnull(nmf.shopMenuTotal, 0) as "shopMenuTotal",
            ns.shop_discount_id as "shopDiscountId",
            ns.shop_title as "shopTitle",
            ns.shop_degist as "shopDegist",
            ns.shop_phone as "shopPhone",
            ns.shop_address as "shopAddress",
            ns.shop_lon as "shopLon",
            ns.shop_lat as "shopLat",
            ns.shop_head_img_url as "shopHeadImgUrl",
            ns.shop_describe_img_url as "shopDescribeImgUrl",
            ns.shop_minimum as "shopMinimum",
            date_format(ns.shop_business_hours_start_time, '%H:%i:%s') as "shopBusinessHoursStartTime",
            date_format(ns.shop_business_hours_end_time, '%H:%i:%s') as "shopBusinessHoursEndTime",
            ns.shop_remark as "shopRemark",
            ns.shop_status as "shopStatus",
            date_format(ns.create_time, '%Y-%c-%d %H:%i:%s') as "createTime",
            date_format(ns.update_time, '%Y-%c-%d %H:%i:%s') as "updateTime"
        from n_shop ns
        INNER JOIN n_user nu on nu.shop_id=ns.id
        LEFT JOIN (select
                        shop_id,
                        count(shop_id) as "shopOrderAmount" from n_order no
                    where no.status=1 and no.order_type="payTheBill"
                    and no.shop_id IS NOT NULL and no.shop_id != ""
                    GROUP BY no.shop_id) non ON non.shop_id=ns.id
        LEFT JOIN (SELECT
                        shop_id as "shopId",
                        sum(shop_id) as "shopMenuTotal"
                    from n_food nf
                    where shop_id=#{shopId}
                ) nmf ON nmf.shopId=ns.id
            <include refid="queryConditions"/>
        <if test="start != null and size != null">
            LIMIT ${start},${size}
        </if>
    </select>

    <select id="getShopTotalByCondition" resultType="java.lang.Integer">
        SELECT
          COUNT(*) total
        from n_shop ns
        INNER JOIN n_user nu on nu.shop_id=ns.id
        LEFT JOIN (select
                        shop_id,
                        count(shop_id) as "shopOrderAmount" from n_order no
                    where no.status=1 and no.order_type="payTheBill"
                    and no.shop_id IS NOT NULL and no.shop_id != ""
                    GROUP BY no.shop_id) non ON non.shop_id=ns.id
        LEFT JOIN (SELECT
                        shop_id as "shopId",
                        sum(shop_id) as "shopMenuTotal"
                    from n_food nf
                    where shop_id=#{shopId}
                    ) nmf ON nmf.shopId=ns.id
            <include refid="queryConditions"/>
    </select>

</mapper>
